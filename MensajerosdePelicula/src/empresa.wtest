import destinos.*
import empresa.*
import mensajeros.*
import paquete.*
import transportes.*

//Test transportes
test "Comprobar peso de camion"{
	camion.setCantidadDeAcoplados(8)
	assert.equals(camion.peso(),8*500)
}
//Test empresa
test "Inicialmente no tengo empleados"{
	assert.that(empresaMensajeria.mensajeros().isEmpty())
}
test "Agregar un empleado" {
	empresaMensajeria.contratarA(chuck)
	assert.that(empresaMensajeria.esEmpleado(chuck))
}
test "Despedir empleado"{
	empresaMensajeria.contratarA(chuck)
	empresaMensajeria.despedirA(chuck)
	assert.notThat(empresaMensajeria.esEmpleado(chuck))
	
}
test "Despedir a todos"{
	empresaMensajeria.contratarA(chuck)
	empresaMensajeria.contratarA(neo)
	empresaMensajeria.contratarA(roberto)
	empresaMensajeria.despedirTodos()
	assert.that(empresaMensajeria.mensajeros().isEmpty())
}
test "Verificar empleado"{
	empresaMensajeria.contratarA(chuck)
	assert.that(empresaMensajeria.esEmpleado(chuck))
}
test "Comprobar si es grande cuando cantidad de mensajeros mayor a 2"{
	empresaMensajeria.contratarA(chuck)
	empresaMensajeria.contratarA(neo)
	empresaMensajeria.contratarA(roberto)
	assert.that(empresaMensajeria.esGrande())
}
test "Peso de ultimo empleado"{
	empresaMensajeria.contratarA(chuck)
	assert.equals(empresaMensajeria.pesoUltimoMensajero(),chuck.pesoTotal())
}
//Falta testear puedeSerEntregado